// Generated by CoffeeScript 1.7.1
var TriggerCart, TriggerProduct, WidgetCart;

WidgetCart = (function() {
  function WidgetCart(opts) {
    if (opts == null) {
      opts = {};
    }
    this.widget_cart_div = opts["widget_cart_div"];
  }

  WidgetCart.prototype.prettyPrice = function(price) {
    return ("" + (price.toFixed(2))).replace(".", ",");
  };

  WidgetCart.prototype.render = function() {
    this.clear();
    if ($(this.widget_cart_div).size() === 0) {
      return;
    }
    return $.ajax(window.location.protocol + '//' + window.location.host + "/cms_cart/carts/get.json", {
      success: (function(_this) {
        return function(res, status, xhr) {
          _this.cart = res;
          _this.renderCart(res);
          _this.renderDelivery(res);
          $(".delivery-tab").hide();
          return $($(".delivery_mode:checked").data("target")).show();
        };
      })(this),
      error: function(xhr, status, err) {
        return console.log("Error", err);
      },
      complete: function(xhr, status) {}
    });
  };

  WidgetCart.prototype.render_only_delivery = function() {
    this.clear();
    if ($(this.widget_cart_div).size() === 0) {
      return;
    }
    return $.ajax(window.location.protocol + '//' + window.location.host + "/cms_cart/carts/get.json", {
      success: (function(_this) {
        return function(res, status, xhr) {
          _this.cart = res;
          return _this.renderDelivery(res);
        };
      })(this),
      error: function(xhr, status, err) {
        return console.log("Error", err);
      },
      complete: function(xhr, status) {}
    });
  };

  WidgetCart.prototype.renderCart = function(c) {
    var res;
    res = this.renderHeader(c);
    res += this.renderTransporters(c);
    res += this.renderProducts(c);
    res += this.renderReductions(c);
    res += this.renderSousTotal(c);
    res += this.renderTvas(c);
    res += this.renderTotal(c);
    res += this.renderOpen(c);
    res += this.renderValider(c);
    return this.append(c, res);
  };

  WidgetCart.prototype.renderDelivery = function(c) {
    this.renderTransporterMode(c);
    return this.renderTransporterCode(c);
  };

  WidgetCart.prototype.append = function(cart, value) {
    $(this.widget_cart_div).html(value);
    return $(this.widget_cart_div).addClass("visibleo_cart");
  };

  WidgetCart.prototype.renderHeader = function(cart) {
    var res;
    res = "";
    return res += "<div class=\"actions\"><span class=\"cart_refresh\"></span><span class=\"cart_clear\"></span></div>";
  };

  WidgetCart.prototype.renderTransporters = function(cart) {
    return "";
  };

  WidgetCart.prototype.renderProducts = function(cart) {
    var res;
    res = "<table class=\"cart_products\">";
    $.each(cart.items, (function(_this) {
      return function(i, e) {
        res += "<tr class=\"cart_product\" data-id=\"" + e.item_id + "\">";
        res += "<td class=\"cart_quantity_container\"><div class=\"cart_minus_1\">-</div><div class=\"cart_update_quantity_container\"><input class=\"cart_update_quantity\" value=\"" + e.quantity + "\"></div><div class=\"cart_plus_1\">+</div></td>";
        res += "<td class=\"cart_product_name_container\">" + e.name + "</td>";
        res += "<td class=\"cart_product_cost_container\">" + (_this.prettyPrice(e.cost)) + " €</td>";
        res += "<td class=\"cart_product_remove_container\"><div class=\"cart_remove\"></div></td>";
        return res += "</tr>";
      };
    })(this));
    return res += "</table>";
  };

  WidgetCart.prototype.renderReductions = function(cart) {
    var res;
    res = "<table class=\"reductions\">";
    return res += "</table>";
  };

  WidgetCart.prototype.renderSousTotal = function(cart) {
    return "<div class=\"cart_sous_total_title\">Sous Total</div><div class=\"cart_sous_total_value\">" + (this.prettyPrice(cart.total)) + " €</div>";
  };

  WidgetCart.prototype.renderTvas = function(cart) {
    var res;
    res = "<div class=\"cart_tva_container\"><div class=\"cart_tva_title\">TVA</div>";
    res += "<table class=\"cart_tvas\">";
    $.each(cart.tvas, (function(_this) {
      return function(i, e) {
        var key, value;
        res += "<tr class=\"cart_tva\">";
        res += (function() {
          var _results;
          _results = [];
          for (key in e) {
            value = e[key];
            _results.push("<td class=\"cart_tva_key\" >" + key + "</td><td class=\"cart_tva_value\" >" + (this.prettyPrice(value)) + " €</td>");
          }
          return _results;
        }).call(_this);
        return res += "</tr>";
      };
    })(this));
    return res += "</table></div>";
  };

  WidgetCart.prototype.renderTotal = function(cart) {
    return "<div class=\"cart_total_title\">Total</div><div class=\"cart_total_value\">" + (this.prettyPrice(cart.total_ttc)) + " €</div>";
  };

  WidgetCart.prototype.renderOpen = function(cart) {
    var res;
    res = "";
    if (cart.is_actif === false) {
      res = "<div class=\"cart_closed\">La boutique est fermée.</div>";
      res = "<div class=\"cart_validate_div\">" + res + "</div>";
    }
    return res;
  };

  WidgetCart.prototype.renderValider = function(cart) {
    var res;
    res = "";
    if (cart.is_actif === true) {
      // if (cart.is_valid_to_pay === true) {
        if (1 == 1) {
        res = "<div class=\"cart_open\">" + ($(this.widget_cart_div).data("button-title")) + "</div>";
      } else {
        res = "";
      }
      res = "<div class=\"cart_validate_div\">" + res + "</div>";
    }
    return res;
  };

  WidgetCart.prototype.renderTransporterMode = function(cart) {
    var key, pretty, res, selected, value, _ref;
    pretty = {
      "delivery": "Livraison",
      "take_away": "Emporter"
    };
    $('.delivery_mode_value').html(pretty[cart.transport_mode]);
    res = "<div>";
    _ref = cart.deliveries_available;
    for (key in _ref) {
      value = _ref[key];
      selected = "";
      if (value === cart.transport_mode) {
        selected = "checked";
      }
      res += "<div class='delivery_mode_elem'><div class='delivery_mode_elem_icon'><div class='icon-" + value + "'></div></div><input type='radio' data-target='#tab-" + value + "' class='delivery_mode' name='delivery_mode' value='" + value + "' " + selected + " /> <div class='delivery_text'>" + pretty[value] + "</div></div>";
    }
    res += "</div>";
    return $(".delivery_mode_change").html(res);
  };

  WidgetCart.prototype.renderTransporterCode = function(cart) {
    var delivery_code, key, res, selected, value;
    delivery_code = cart.delivery_code;
    delivery_code || (delivery_code = "Aucun");
    $('.delivery_code_value').html(delivery_code);
    res = "<select class='delivery_code'><option value=''>Choisir</option>";
    console.log(cart);
    res += (function() {
      var _ref, _results;
      _ref = cart.deliveries_code_available;
      _results = [];
      for (key in _ref) {
        value = _ref[key];
        selected = "";
        if (value === cart.delivery_code) {
          selected = "selected";
        }
        _results.push("<option value='" + value + "' " + selected + ">" + value + "</option>");
      }
      return _results;
    })();
    res += "</select>";
    return $(".delivery_code_change").html(res);
  };

  WidgetCart.prototype.clear = function() {
    return $(this.widget_cart_div).empty();
  };

  return WidgetCart;

})();

TriggerCart = (function() {
  function TriggerCart(widget_cart) {
    var klass;
    this.widget_cart = widget_cart;
    if ($(this.widget_cart.widget_cart_div).size() === 0) {
      return;
    }
    klass = this;
    $(this.widget_cart.widget_cart_div).delegate('.cart_minus_1', 'click', function(e) {
      return klass.cart_remove_one(this);
    });
    $(this.widget_cart.widget_cart_div).delegate('.cart_plus_1', 'click', function(e) {
      return klass.cart_add_one(this);
    });
    $(this.widget_cart.widget_cart_div).delegate('.cart_refresh', 'click', function(e) {
      return klass.cart_refresh(this);
    });
    $(this.widget_cart.widget_cart_div).delegate('.cart_remove', 'click', function(e) {
      return klass.cart_remove(this);
    });
    $(this.widget_cart.widget_cart_div).delegate('.cart_clear', 'click', function(e) {
      return klass.cart_clear(this);
    });
    $(this.widget_cart.widget_cart_div).delegate('.cart_update_quantity', 'change', function(e) {
      return klass.cart_update_qty(this);
    });
    $(this.widget_cart.widget_cart_div).delegate('.cart_open', 'click', function(e) {
      return klass.redirect_to_next_step(this);
    });
    if (!(window.singleton_delivery_mode !== void 0)) {
      window.singleton_delivery_mode = 1;
      $("body").delegate('.delivery_code', 'change', function(e) {
        return klass.delivery_update_code(this);
      });
      $("body").delegate('.delivery_mode', 'click', function(e) {
        klass.delivery_update_mode(this);
        $(".delivery-tab").hide();
        return $($(this).data("target")).show();
      });
    }
  }

  TriggerCart.prototype.delivery_update_mode = function(elem) {
    var val;
    val = $(elem).val();
    return $.ajax(window.location.protocol + '//' + window.location.host + "/cms_cart/carts/set_delivery_mode.json", {
      data: {
        delivery_mode: val
      },
      type: 'POST',
      success: (function(_this) {
        return function(res, status, xhr) {
          return _this.widget_cart.render();
        };
      })(this),
      error: function(xhr, status, err) {
        return console.log("Error", err);
      },
      complete: function(xhr, status) {}
    });
  };

  TriggerCart.prototype.delivery_update_code = function(elem) {
    var val;
    val = $(elem).val();
    console.log(elem, "haha", val);
    return $.ajax(window.location.protocol + '//' + window.location.host + "/cms_cart/carts/set_delivery_code.json", {
      data: {
        delivery_code: val
      },
      type: 'POST',
      success: (function(_this) {
        return function(res, status, xhr) {
          return _this.widget_cart.render();
        };
      })(this),
      error: function(xhr, status, err) {
        return console.log("Error", err);
      },
      complete: function(xhr, status) {}
    });
  };

  TriggerCart.prototype.redirect_to_next_step = function(elem) {
    return window.location.href = window.location.protocol + '//' + window.location.host + $(this.widget_cart.widget_cart_div).data("url");
  };

  TriggerCart.prototype.cart_remove = function(elem) {
    var item_id;
    item_id = $(elem).parent().parent().data("id");
    return $.ajax(window.location.protocol + '//' + window.location.host + ("/cms_cart/carts/remove_item/" + item_id + ".json"), {
      type: 'POST',
      success: (function(_this) {
        return function(res, status, xhr) {
          return _this.widget_cart.render();
        };
      })(this),
      error: function(xhr, status, err) {
        return console.log("Error", err);
      },
      complete: function(xhr, status) {}
    });
  };

  TriggerCart.prototype.cart_remove_one = function(elem) {
    var item_id, new_qty, old_val;
    item_id = $(elem).parent().parent().data("id");
    old_val = $(elem).parent().parent().find(".cart_update_quantity").first().val();
    new_qty = parseInt(old_val) - 1;
    return $.ajax(window.location.protocol + '//' + window.location.host + ("/cms_cart/carts/update_item_quantity/" + item_id + ".json"), {
      data: {
        quantity: new_qty
      },
      type: 'POST',
      success: (function(_this) {
        return function(res, status, xhr) {
          return _this.widget_cart.render();
        };
      })(this),
      error: function(xhr, status, err) {
        return console.log("Error", err);
      },
      complete: function(xhr, status) {}
    });
  };

  TriggerCart.prototype.cart_add_one = function(elem) {
    var item_id, new_qty, old_val;
    item_id = $(elem).parent().parent().data("id");
    old_val = $(elem).parent().find(".cart_update_quantity").first().val();
    new_qty = parseInt(old_val) + 1;
    console.log(item_id, "haha");
    return $.ajax(window.location.protocol + '//' + window.location.host + ("/cms_cart/carts/update_item_quantity/" + item_id + ".json"), {
      data: {
        quantity: new_qty
      },
      type: 'POST',
      success: (function(_this) {
        return function(res, status, xhr) {
          return _this.widget_cart.render();
        };
      })(this),
      error: function(xhr, status, err) {
        return console.log("Error", err);
      },
      complete: function(xhr, status) {}
    });
  };

  TriggerCart.prototype.cart_update_qty = function(elem) {
    var item_id;
    item_id = $(elem).parent().parent().parent().data("id");
    return $.ajax(window.location.protocol + '//' + window.location.host + ("/cms_cart/carts/update_item_quantity/" + item_id + ".json"), {
      data: {
        quantity: parseInt($(elem).val())
      },
      type: 'POST',
      success: (function(_this) {
        return function(res, status, xhr) {
          return _this.widget_cart.render();
        };
      })(this),
      error: function(xhr, status, err) {
        return console.log("Error", err);
      },
      complete: function(xhr, status) {}
    });
  };

  TriggerCart.prototype.cart_refresh = function(elem) {
    return this.widget_cart.render();
  };

  TriggerCart.prototype.cart_clear = function(elem) {
    return $.ajax(window.location.protocol + '//' + window.location.host + "/cms_cart/carts/clear.json", {
      type: 'POST',
      success: (function(_this) {
        return function(res, status, xhr) {
          return _this.widget_cart.render();
        };
      })(this),
      error: function(xhr, status, err) {
        return console.log("Error", err);
      },
      complete: function(xhr, status) {}
    });
  };

  TriggerCart.prototype.cart_add_product = function(product_id, product_qty, final_options) {
    return $.ajax(window.location.protocol + '//' + window.location.host + ("/cms_cart/carts/add_item/" + product_id + ".json"), {
      data: {
        quantity: product_qty,
        options: final_options
      },
      type: 'POST',
      success: (function(_this) {
        return function(res, status, xhr) {
          return _this.widget_cart.render();
        };
      })(this),
      error: function(xhr, status, err) {
        return console.log("Error", err);
      },
      complete: function(xhr, status) {}
    });
  };

  return TriggerCart;

})();

TriggerProduct = (function() {
  function TriggerProduct(widget_cart, trigger_cart) {
    var klass;
    this.widget_cart = widget_cart;
    this.trigger_cart = trigger_cart;
    if ($(this.widget_cart.widget_cart_div).size() === 0) {
      return;
    }
    klass = this;
    $(".add_to_cart").click(function(e) {
      return klass.add_to_cart(this);
    });
  }

  TriggerProduct.prototype.add_to_cart = function(elem) {
    var final_options, gp_options, id, qty;
    id = $(elem).data("product-id");
    console.log(id);
    qty = parseInt($("[data-product-id$='" + id + "'][data-type='product_qty']").val());
    gp_options = $("[data-product-id$='" + id + "'][data-type='product_option_classification']");
    final_options = jQuery.map(gp_options, function(a) {
      var gp_id, opt_id;
      gp_id = $(a).data("id");
      opt_id = $(a).val();
      console.log("boucle", gp_id, opt_id);
      return {
        option_classification_id: gp_id,
        option_id: opt_id
      };
    });
    console.log(final_options, "is the gp options");
    this.trigger_cart.cart_add_product(id, qty, final_options);
    this.widget_cart.render();
    return "mdr";
  };

  return TriggerProduct;

})();

$(document).ready(function() {
  return $(".widget_cart_div").each(function() {
    var trigger_cart, trigger_product, widget_cart;
    console.log(this);
    widget_cart = new WidgetCart({
      widget_cart_div: this
    });
    trigger_cart = new TriggerCart(widget_cart);
    trigger_product = new TriggerProduct(widget_cart, trigger_cart);
    return widget_cart.render();
  });
});
